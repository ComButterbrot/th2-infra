---
# Default values for th2-core.

# Image repositories and credentials to create pull secrets
productRegistry:
  secret: th2-core
  name: 
  username:
  password:

solutionRegistry:
  secret: th2-solution
  registry: 
  username:
  password:

ingress:
  host:

externalRabbitMQHost:
  host: localhost

infraEditor:
  image:
    repository: ghcr.io/th2-net/th2-infra-editor
    tag: 1.0.64

infraRepo:
  image:
    repository: ghcr.io/th2-net/infra-repo
    tag: 0.4.3

infraOperator:
  image:
    repository: ghcr.io/th2-net/th2-infra-operator
    tag: 3.1.1
  config:
    chart:
      repository: http://infra-repo:8080
      version: 0.4.3
      name: infra-operator-tpl
    namespacePrefixes: 
    - "th2-"
    k8sUrl: "<kubernetes-external-entrypoint>"
    rabbitMQManagement:
      host: "rabbitmq.service.svc.cluster.local" # deprecated. host is taken from rabbitmq config
      port: "15672"
      username: "th2"
      password: "${RABBITMQ_PASS}"
      persistence: true
      schemaPermissions:
        configure: ""
        read: ".*"
        write: ".*"

infraMgr:
  image:
    repository: ghcr.io/th2-net/th2-infra-mgr
    tag: 1.1.1
  git:
    secretName: infra-mgr
    privateKeyFileSecret: infra-mgr
    secretMountPath: /home/service/keys
    repository: git@github.com:th2-net/th2-demo-configuration.git
    repositoryLocalCache: /home/service/repository
    httpAuthUsername: "" #should be stored in secret th2-git-access-schemas 
    httpAuthPassword: "" #should be stored in secret th2-git-access-schemas
  rabbitmq:
    vHostPrefix: th2-
    usernamePrefix: th2-user-
    secret: rabbitmq
    passwordLength: 24
  cassandra:
    keyspacePrefix: schema_
    secret: cassandra
  kubernetes:
    namespacePrefix: "th2-" # must be not more than 5 symbols
    ingress: ingress-rules
    configMaps:
      logging: logging-config-template
      rabbitmq: rabbit-mq-app-config
      rabbitmq-ext: rabbit-mq-external-app-config
      cassandra: cradle
      cassandra-ext: cradle-external
      prometheus: prometheus-app-config
    secrets:
    - th2-core 
    - th2-solution
    - th2-proprietary

# If service not internal - ExternalName service will be created, credentials will be mapped to secrets / config maps
# otherwise service will be deployed as a chart dependency
rabbitmq:
  internal: true
  memoryHighWatermark:
    enable: true
    type: absolute
    value: 1024MB
  #it is not required if the service internal
#  host: ""
  fullnameOverride: rabbitmq
  extraConfiguration: |-
    default_vhost = th2
  auth:
    username: th2
    password: ""
    erlangCookie: ""
  rabbitmqExchange: th2-exchange
  replicaCount: 1
  podAntiAffinityPreset: hard
  service:
    type: "NodePort"
    nodePort: 32000

# If service not internal - ExternalName service will be created, credentials will be mapped to secrets / config maps
# otherwise service will be deployed as a chart dependency
cassandra:
  internal: true
  #it is not required if the service internal
#  host: ""
  fullnameOverride: cassandra
  cluster:
    datacenter: dc1
  dbUser:
    user: th2
    # will be generated if empty
    password: ""
  keyspace: cradle
  persistence:
    enabled: false
    storageClass: local-storage
    size: 50Gi
